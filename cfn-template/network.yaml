AWSTemplateFormatVersion: 2010-09-09
Description: |
  This is my network cloudformation infrasucture
Parameters:
  Namespace:
    Description: This is my namespace
    Default: udacity-test 
    Type: String
  VpcCIDR:
    Description: VPC classess inter-domain routing
    Type: String
    Default: 10.0.0.0/16
  PublicSubnet1CIDR:
    Type: String
    Default: 10.0.1.0/24
  PublicSubnet2CIDR:
    Type: String
    Default: 10.0.2.0/24
  PrivateSubnet1CIDR:
    Type: String
    Default: 10.0.3.0/24
  PrivateSubnet2CIDR:
    Type: String
    Default: 10.0.4.0/24
  VpcAZs:
    Type: CommaDelimitedList
    Default: "us-east-1a,us-east-1b"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      Tags:
        - Key: namespace
          Value: !Ref Namespace
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: namespace
          Value: !Ref Namespace
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !Ref VpcAZs]
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: namespace
          Value: !Ref Namespace
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !Ref VpcAZs]
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: namespace
          Value: !Ref Namespace
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !Ref VpcAZs]
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: namespace
          Value: !Ref Namespace
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !Ref VpcAZs]
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: namespace
          Value: !Ref Namespace

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
      RouteTableId: !Ref PrivateRouteTable1
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
      RouteTableId: !Ref PrivateRouteTable2
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2
Outputs:
  VPC:
    Description: VPC-id
    Value: !Ref VPC
    Export:
      Name: !Sub ${Namespace}-VPCID
  VpcPublicRouteTable:
    Description: ID VPC public route table
    Value: !Ref PublicRouteTable
    Export: 
      Name: !Sub ${Namespace}-PUB-RT
  VpcPrivateRouteTable1:
    Description: ID Vpc Private Route Table 1
    Value: !Ref PrivateRouteTable1
    Export: 
      Name: !Sub ${Namespace}-PRI-RT1
  VpcPrivateRouteTable2:
    Description: ID VPC private Route Table 2
    Value: !Ref PrivateRouteTable2
    Export: 
      Name: !Sub ${Namespace}-PRI-RT2
  PublicSubnets:
    Description: A list of public subnets
    Value: !Join [',', [!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export: 
      Name: !Sub ${Namespace}-PUB-NETS
  PrivateSubnets:
    Description: A list of private subnets
    Value: !Join [',', [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
    Export: 
      Name: !Sub ${Namespace}-PRI-NETS
  PublicSubnet1:
    Description: ID Public subnet 1
    Value: !Ref PublicSubnet1
    Export: 
      Name: !Sub ${Namespace}-PUB-SUB1
  PublicSubnet2:
    Description: ID Public subnet 2
    Value: !Ref PublicSubnet2
    Export: 
      Name: !Sub ${Namespace}-PUB-SUB2
  PrivateSubnet1:
    Description: ID Private subnet 1
    Value: !Ref PrivateSubnet1
    Export: 
      Name: !Sub ${Namespace}-PRI-SUB1
  PrivateSubnet2:
    Description: ID Private subnet 2
    Value: !Ref PrivateSubnet2
    Export: 
      Name: !Sub ${Namespace}-PRI-SUB2